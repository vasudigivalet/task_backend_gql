scalar DateTime

type File {
  filename: String!
  mimetype: String!
  encoding: String!
}

type studentDetails {
  _id: ID!
  name: String!
  classId: String!
  gender: Gender!
  email: String!
  dateOfbirth: DateTime!
  address: String!
  updatedAt: DateTime!
  createdAt: DateTime!
  class: [classDetails]
}

type AddStudentResponse {
  success: Boolean!
}
enum Gender {
  MALE
  FEMALE
  OTHERS
}

#create class Input
input CreateStudentInput {
  name: String!
  classId: String!
  gender: Gender = MALE
  email: String!
  dateOfbirth: DateTime!
  address: String!
}

type Query {
  #class Query
  students: [studentDetails]
  student(_id: ID!): studentDetails
}

type Mutation {
  #class Mutation
  createStudent(CreateStudentInput: CreateStudentInput!): studentDetails
  updateStudent(_id: ID!, input: CreateStudentInput): studentDetails
  deleteStudent(_id: ID!): AddStudentResponse
}
